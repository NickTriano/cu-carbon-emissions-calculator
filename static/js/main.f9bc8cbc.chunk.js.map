{"version":3,"sources":["Components/building_field.js","Components/input_field.js","defaults.js","Components/ecm_field.js","Components/limits.js","Components/charts.js","Components/UI.js","cooper_logo.svg","App.js","reportWebVitals.js","index.js"],"names":["BuildingInputField","className","name","value","this","props","building","onChange","onTextChange","type","Component","InputField","leftText","leftVar","leftValue","rightText","rightVar","rightValue","defaults_2020","area","electricityUse","electricityDemand","gasUse","electricityRate","electricityDemandRate","gasRate","electricityCoeff","gasCoeff","limits","limit24","limit30","limit35","default_ecms","electricity","gas","carbon_limits","A","B_norm","B_health","E","F","H","I1","I2","I3","I4","M","R1","R2","U","ECMField","addECM","e","ecms","length","removeECM","i","splice","setDefaultECMs","JSON","parse","stringify","clearECMs","prop","target","Number","map","ecm","onClick","toString","LimitsField","Chart","register","annotationPlugin","KBTU_KWH","KBTU_THERM","COLORS","ChartContent","pie_energy_use","pie_co2","pie_cost","pie_ecm","bar_ll97","bar_co2","bar_thresholds","valueLabelFunction","context","label","parsed","Intl","NumberFormat","maximumFractionDigits","format","costLabelFunction","undefined","x","style","currency","dataset","getProps","electricity_kbtu","gas_kbtu","total_kbtu","electricity_co2","gas_co2","total_co2","electricity_cost","gas_cost","total_cost","ecm_electricity_kbtu","reduce","ecm_gas_kbtu","ecms_co2","net_electricity_kbtu","Math","max","net_gas_kbtu","net_electricity_co2","net_gas_co2","net_electricity_cost","net_gas_cost","net_kbtu","net_co2","net_cost","ecm_co2","ecm_savings","target24","target30","target35","penalty24","penalty","penalty30","penalty35","data_energy_use","labels","datasets","data","totalFlag","backgroundColor","hoverOffset","options_energy_use","plugins","title","display","text","font","size","tooltip","callbacks","maintainAspectRatio","data_co2","options_co2","data_cost","options_cost","data_ecm","slice","data_ll97_costs","stack","options_ll97_costs","indexAxis","padding","bottom","scales","xAxes","stacked","yAxes","data_ll97_targets","years","annotations","forEach","push","content","toFixed","enabled","yAdjust","xMin","xMax","borderColor","borderWidth","options_ecm","legend","position","options_ll97_targets","annotation","grid","drawBorder","y","btnTotal","setTotal","btnNet","setNet","id","options","ref","reference","UI","state","bind","onLimitsChange","onECMChange","setDefaults","onSubmit","setState","preventDefault","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9bc8cbc.chunk.js","sourcesContent":["// Generates the user input fields for the building type and floor area\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass BuildingInputField extends Component {\r\n    \r\n  render() {\r\n    return (\r\n        <div className=\"input-container\">\r\n            <div className=\"left-container\">\r\n              <div className=\"head-text-4\">Building Type</div>\r\n                <select className=\"bldg-type-select\" name='building' value={this.props.building} onChange={this.props.onTextChange}>\r\n                  <option value=\"A\">A (Assembly)</option>\r\n                  <option value=\"B_norm\">B (Business)</option>\r\n                  <option value=\"B_health\">B (Healthcare)</option>\r\n                  <option value=\"E\">E (Educational)</option>\r\n                  <option value=\"F\">F (Factory/Industrial)</option>\r\n                  <option value=\"H\">H (High Hazard)</option>\r\n                  <option value=\"I1\">I-1 (Institutional)</option>\r\n                  <option value=\"I2\">I-2 (Institutional)</option>\r\n                  <option value=\"I3\">I-3 (Institutional)</option>\r\n                  <option value=\"I4\">I-4 (Institutional)</option>\r\n                  <option value=\"M\">M (Mercantile)</option>\r\n                  <option value=\"R1\">R-1 (Residential)</option>\r\n                  <option value=\"R2\">R-2 (Residential)</option>\r\n                  <option value=\"U\">U (Utility/Misc)</option>\r\n                </select>\r\n\r\n            </div>\r\n            <div className=\"right-container bldg\">\r\n                <div className=\"head-text-4\">Area (SF)</div>\r\n                <input name={this.props.name} type=\"number\" value={this.props.value} onChange={this.props.onChange}></input>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default BuildingInputField;\r\n","// Generates user input field templates for \r\n// utility information and carbon coefficients\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass InputField extends Component {\r\n    \r\n  render() {\r\n    return (\r\n        <div className=\"input-container\">\r\n            <div className=\"left-container\">\r\n                <div className=\"head-text-4\">{this.props.leftText}</div>\r\n                <input name={this.props.leftVar} type=\"number\" value={this.props.leftValue} onChange={this.props.onChange}></input>\r\n            </div>\r\n            <div className=\"right-container\">\r\n                <div className=\"head-text-4\">{this.props.rightText}</div>\r\n                <input name={this.props.rightVar} type=\"number\" value={this.props.rightValue} onChange={this.props.onChange}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// Stores all default values for the user input based on 41CS in 2020\r\n\r\n// default utility data from 41CS in 2020\r\nconst defaults_2020 = {\r\n  // building inputs\r\n  building: 'B_norm',\r\n  area: 180000, // square feet\r\n\r\n  // utility inputs\r\n  electricityUse: 3357600, // kWh\r\n  electricityDemand: 770, // kW\r\n  gasUse: 224449, // therms\r\n  // electricityRate: 0.03, // $/kWh\r\n  electricityRate: 0.19, // $/kWh\r\n  electricityDemandRate: 25, // $/kW\r\n  gasRate: 0.9, // $/therm\r\n\r\n  // LL97 inputs\r\n  // carbon coefficients\r\n  electricityCoeff: 0.000288962, // tons CO2e/kWh\r\n  gasCoeff: 0.00005311, // tons CO2e/kBtu}\r\n  \r\n  // carbon limits (kg CO2e/sf/year)\r\n  limits: {\r\n    limit24: 8.46,\r\n    limit30: 4.53,\r\n    limit35: 1.4,\r\n  }\r\n}\r\n\r\n// default ECMS from CU-EnergyMasterPlanPresentationCalculations-20210601.xlsx in Facilities Repository, as of 10/30/21\r\n// and from Oliver Zhang's thesis\r\n// based on assumptions of savings allocated to electricity or natural gas\r\nconst default_ecms = [{\r\n    name: 'Lab Heat Recovery',\r\n    electricity: 0,\r\n    gas: 3276219 // 174 tCO2e 3276219*0.00005311\r\n  },\r\n  // {\r\n  //   name: 'Heat Pump',\r\n  //   electricity: 0,\r\n  //   gas: 5554510 // 295 tCO2e 5554510*0.00005311\r\n  // },\r\n  // {\r\n  //   name: 'Improved Cogen Heat Recovery',\r\n  //   electricity: 720275, // 61 tCO2e split or just all gas? 142\r\n  //   gas: 1882885 // 100 tCO2e 1882885*0.00005311\r\n  // },\r\n  {\r\n    name: 'Optimized Controls',\r\n    electricity: 1653089, // 61 tCO2e split or just all gas? 140/0.000288962*3.412\r\n    gas: 37658 // 2 tCO2e 2/0.00005311\r\n  },\r\n  {\r\n    name: 'CW Supply Temp Reset',\r\n    electricity: 429930, // 126,000 kWh/year\r\n    gas: 0\r\n  }];\r\n\r\nconst carbon_limits = {\r\n  A: {limit24: 10.74, limit30: 4.2, limit35: 1.4},\r\n  B_norm: {limit24: 8.46, limit30: 4.53, limit35: 1.4},\r\n  B_health: {limit24: 23.81, limit30: 11.93, limit35: 1.4},\r\n  E: {limit24: 7.58, limit30: 3.44, limit35: 1.4},\r\n  F: {limit24: 5.74, limit30: 1.67, limit35: 1.4},\r\n  H: {limit24: 23.81, limit30: 11.93, limit35: 1.4},\r\n  I1: {limit24: 11.38, limit30: 5.98, limit35: 1.4},\r\n  I2: {limit24: 23.81, limit30: 11.93, limit35: 1.4},\r\n  I3: {limit24: 23.81, limit30: 11.93, limit35: 1.4},\r\n  I4: {limit24: 7.58, limit30: 3.44, limit35: 1.4},\r\n  M: {limit24: 11.81, limit30: 4.03, limit35: 1.4},\r\n  R1: {limit24: 9.87, limit30: 5.26, limit35: 1.4},\r\n  R2: {limit24: 6.75, limit30: 4.07, limit35: 1.4},\r\n  U: {limit24: 4.26, limit30: 1.1, limit35: 1.4},\r\n}\r\n\r\nexport {defaults_2020, default_ecms, carbon_limits};","// Generates the user input fields for energy conservation measures (ECMs)\r\n\r\nimport React, { Component } from \"react\";\r\nimport { default_ecms } from \"../defaults\";\r\n\r\nclass ECMField extends Component {\r\n    \r\n    addECM = e => {\r\n        if (this.props.ecms.length < 10){\r\n            var ecms = [...this.props.ecms, {\r\n                name: '',\r\n                electricity: 0,\r\n                gas: 0\r\n            }];\r\n            this.props.onChange(ecms);\r\n        }\r\n    }\r\n\r\n    removeECM = i => {\r\n        var ecms = [...this.props.ecms];\r\n        ecms.splice(i, 1);\r\n        // setInputList(list);\r\n        this.props.onChange(ecms);\r\n    }\r\n\r\n    setDefaultECMs = () => {\r\n        var ecms = JSON.parse(JSON.stringify(default_ecms));\r\n        this.props.onChange(ecms);\r\n    }\r\n\r\n    clearECMs = () => {\r\n        var ecms = [{\r\n            name: '',\r\n            electricity: 0,\r\n            gas: 0\r\n          }];\r\n          this.props.onChange(ecms);\r\n    }\r\n\r\n    // update the property (name, electricity, gas) of the corresponding ecm in the array\r\n    onChange = (e, i, prop) => {\r\n        var ecms = [...this.props.ecms];\r\n        if (prop === 'name'){\r\n            ecms[i][prop] = e.target.value;\r\n        } else {\r\n            ecms[i][prop] = Number(e.target.value);\r\n        }\r\n        this.props.onChange(ecms);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"input-header-left\">\r\n                {this.props.ecms.map( (ecm, i) => (\r\n                    <div key={i.toString()} className=\"input-container\">\r\n                        <div className=\"input-container-ecm\">\r\n                            <div className=\"left-container\">\r\n                                <div className=\"head-text-4\">ECM Name:</div>\r\n                            </div>\r\n                            <div className=\"name-container\">\r\n                                <input type=\"text\" value={ecm.name} onChange={e => this.onChange(e, i, \"name\")}></input>\r\n                                <button className=\"type-remove-btn\" onClick={() => this.removeECM(i)}>X</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-container-ecm\">\r\n                            <div className=\"left-container\">\r\n                                <div className=\"head-text-4\">Electricity (kBtu)</div>\r\n                                <input type=\"number\" value={ecm.electricity} onChange={e => this.onChange(e, i, \"electricity\")}></input>\r\n                            </div>\r\n                            <div className=\"right-container\">\r\n                                <div className=\"head-text-4\">Gas (kBtu)</div>\r\n                                <input type=\"number\" value={ecm.gas} onChange={e => this.onChange(e, i, \"gas\")}></input>\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"input-border\"></div>\r\n                    </div>\r\n                ))}\r\n            {/* <div className=\"ecm-btn-group\"> */}\r\n            <button className=\"btn-1\" onClick={this.addECM}>{\" \"}Add ECM{\" \"}</button>\r\n            <button onClick={this.clearECMs}>{\" \"}Clear ECMs{\" \"}</button>\r\n            <button onClick={this.setDefaultECMs}>{\" \"}Set Default ECMs{\" \"}</button>\r\n            {/* </div> */}\r\n            \r\n\r\n\r\n            {/* npx browserslist@latest --update-db */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ECMField;\r\n","// Generates the LL97 carbon emissions limits corresponding \r\n// to the building type in the user input\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass LimitsField extends Component {\r\n    \r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"left-container\">\r\n                <div className=\"head-text-4 limit-text\">2024-2029 limit:</div>\r\n            </div>\r\n            <div className=\"right-container\">\r\n                <div className=\"head-text-4\">{this.props.limit24} kg CO2e/sf/year</div>\r\n            </div>\r\n            <div className=\"left-container\">\r\n                <div className=\"head-text-4 limit-text\">2030-2034 limit:</div>\r\n            </div>\r\n            <div className=\"right-container\">\r\n                <div className=\"head-text-4\">{this.props.limit30} kg CO2e/sf/year</div>\r\n            </div>\r\n            <div className=\"left-container\">\r\n                <div className=\"head-text-4 limit-text\">2035+ limit:</div>\r\n            </div>\r\n            <div className=\"right-container\">\r\n                <div className=\"head-text-4\">{this.props.limit35} kg CO2e/sf/year</div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default LimitsField;\r\n","// Generates all charts displayed in the web application\r\n// and performs all calculations associated with the charts \r\n// based on the user input\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\nimport { Chart } from 'chart.js';\r\nimport annotationPlugin from 'chartjs-plugin-annotation';\r\n\r\nChart.register(annotationPlugin);\r\n\r\nconst KBTU_KWH = 3.412;\r\nconst KBTU_THERM = 100.067;\r\nconst COLORS = [ // colors correspond to a maximum of 10 ECMs\r\n    'rgb(54, 162, 235)', // blue\r\n    'rgb(237,28,36)', //'rgb(255, 99, 132)', // red //rgb(255,207,6)\r\n    '#ff7f0e',  // safety orange\r\n    '#2ca02c',  // cooked asparagus green\r\n    '#9467bd',  // muted purple\r\n    '#8c564b',  // chestnut brown\r\n    '#e377c2',  // raspberry yogurt pink\r\n    '#7f7f7f',  // middle gray\r\n    '#bcbd22',  // curry yellow-green\r\n    '#17becf'   // blue-teal\r\n  ]\r\n\r\nclass ChartContent extends Component {\r\n    \r\n    pie_energy_use = {};\r\n    pie_co2 = {};\r\n    pie_cost = {};\r\n    pie_ecm = {};\r\n    bar_ll97 = {};\r\n    bar_co2 = {};\r\n    bar_thresholds = {};\r\n    \r\n    valueLabelFunction = context => {\r\n        var label = context.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        if (context.parsed !== null) {\r\n          label += new Intl.NumberFormat('en-US', { maximumFractionDigits: 0 }).format(context.parsed);\r\n        }\r\n        return label;\r\n    }\r\n    \r\n    costLabelFunction = context => {\r\n    var label;\r\n    if (context.parsed.x === undefined) {\r\n        label = context.label || '';\r\n        if (label) {\r\n        label += ': ';\r\n        }\r\n        label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(context.parsed);\r\n    } else {\r\n        label = context.dataset.label || '';\r\n        if (label) {\r\n            label += ': ';\r\n        }\r\n        label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(context.parsed.x);\r\n    }\r\n    return label;\r\n    }\r\n\r\n    getProps = () => {\r\n        // total energy use\r\n        var electricity_kbtu = this.props.electricityUse*KBTU_KWH; // convert kWh to kBtu\r\n        var gas_kbtu = this.props.gasUse*KBTU_THERM; // convert therms to kBtu\r\n        var total_kbtu = electricity_kbtu + gas_kbtu;\r\n\r\n        // total CO2\r\n        var electricity_co2 = this.props.electricityUse * this.props.electricityCoeff; // coeff is tCO2e/kWh\r\n        var gas_co2 = gas_kbtu * this.props.gasCoeff; // coeff is tCO2e/kBtu\r\n        var total_co2 = electricity_co2 + gas_co2;\r\n\r\n        // total costs\r\n        var electricity_cost = this.props.electricityUse*this.props.electricityRate;\r\n        var gas_cost = this.props.gasUse*this.props.gasRate;\r\n        var total_cost = electricity_cost + gas_cost;\r\n\r\n        // ECM energy, CO2, and cost savings\r\n        var ecm_electricity_kbtu = this.props.ecms.reduce( (x, ecm) => x + ecm.electricity, 0);\r\n        var ecm_gas_kbtu = this.props.ecms.reduce( (x, ecm) => x + ecm.gas, 0);\r\n\r\n        // ECM CO2 data for pie chart                 kBtu   *   kWh/kBtu  *  tCO2e/kWh                    kBtu * tCO2e/kBtu\r\n        var ecms_co2 = this.props.ecms.map(ecm => ecm.electricity/KBTU_KWH*this.props.electricityCoeff + ecm.gas*this.props.gasCoeff);\r\n\r\n        // net energy, CO2, and costs\r\n        // use maximum to prevent negative values\r\n        var net_electricity_kbtu = Math.max(electricity_kbtu - ecm_electricity_kbtu, 0);\r\n        var net_gas_kbtu = Math.max(gas_kbtu - ecm_gas_kbtu, 0);\r\n        var net_electricity_co2 = net_electricity_kbtu/KBTU_KWH*this.props.electricityCoeff; // coeff is tCO2e/kWh\r\n        var net_gas_co2 = net_gas_kbtu*this.props.gasCoeff; // coeff is tCO2e/kBtu\r\n        var net_electricity_cost = net_electricity_kbtu/KBTU_KWH*this.props.electricityRate; // rate is $/kWh\r\n        var net_gas_cost = net_gas_kbtu/KBTU_THERM*this.props.gasRate; // must covert to therms since rate is $/therm, not $/kBtu\r\n\r\n        var net_kbtu = net_electricity_kbtu + net_gas_kbtu;\r\n        var net_co2 = net_electricity_co2 + net_gas_co2;\r\n        var net_cost = net_electricity_cost + net_gas_cost;\r\n        var ecm_co2 = total_co2 - net_co2;\r\n        var ecm_savings =  total_cost - net_cost;\r\n\r\n        // LL97 targets\r\n        var target24 = this.props.area*this.props.limits.limit24/1000;\r\n        var target30 = this.props.area*this.props.limits.limit30/1000;\r\n        var target35 = this.props.area*this.props.limits.limit35/1000;\r\n\r\n        var penalty24 = Math.max((net_co2 - target24)*this.props.penalty, 0);\r\n        var penalty30 = Math.max((net_co2 - target30)*this.props.penalty, 0);\r\n        var penalty35 = Math.max((net_co2 - target35)*this.props.penalty, 0);\r\n\r\n        // pie charts\r\n        var data_energy_use = {\r\n            labels: ['Electricity','Natural Gas',],\r\n            datasets: [{\r\n            data: this.props.totalFlag ? [electricity_kbtu, gas_kbtu] : [net_electricity_kbtu, net_gas_kbtu],\r\n            backgroundColor: [\r\n                'rgb(54, 162, 235)',\r\n                'rgb(237,28,36)',\r\n            ],\r\n            hoverOffset: 4\r\n            }]\r\n        };\r\n        \r\n        var options_energy_use = {\r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: this.props.totalFlag ? 'Total Energy Use (kBtu)' : 'Net Energy Use (kBtu)',\r\n                    font: { size: 16} \r\n                },\r\n                tooltip: {\r\n                callbacks: {\r\n                    label: this.valueLabelFunction\r\n                }\r\n            }\r\n            },\r\n            maintainAspectRatio: false\r\n        };\r\n    \r\n        \r\n        var data_co2 = {\r\n            labels: ['Electricity','Natural Gas',],\r\n            datasets: [{\r\n            data: this.props.totalFlag ? [electricity_co2, gas_co2] : [net_electricity_co2, net_gas_co2],\r\n            backgroundColor: [\r\n                'rgb(54, 162, 235)',\r\n                'rgb(237,28,36)',\r\n            ],\r\n            hoverOffset: 4\r\n            }]\r\n        };\r\n    \r\n        var options_co2 = {\r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: this.props.totalFlag ? 'Total CO2 Emissions (tCO2)' : 'Net CO2 Emissions (tCO2)',\r\n                    font: { size: 16}\r\n                },\r\n                tooltip: {\r\n                callbacks: {\r\n                    label: this.valueLabelFunction\r\n                }\r\n            }\r\n            },\r\n            maintainAspectRatio: false\r\n        };\r\n        \r\n        var data_cost = {\r\n            labels: ['Electricity', 'Natural Gas',],\r\n            datasets: [{\r\n            data: this.props.totalFlag ? [electricity_cost, gas_cost]: [net_electricity_cost, net_gas_cost],\r\n            backgroundColor: [\r\n                'rgb(54, 162, 235)',\r\n                'rgb(237,28,36)',\r\n            ],\r\n            hoverOffset: 4\r\n            }]\r\n        };\r\n    \r\n        var options_cost = {\r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: this.props.totalFlag ? 'Total Energy Costs ($)' : 'Net Energy Costs ($)',\r\n                    font: { size: 16}\r\n                },\r\n                tooltip: {\r\n                callbacks: {\r\n                    label: this.costLabelFunction\r\n                }\r\n            }\r\n            },\r\n            maintainAspectRatio: false\r\n        };\r\n    \r\n        var data_ecm = {\r\n            labels: this.props.ecms.map(ecm => ecm.name),\r\n            datasets: [{\r\n            data: ecms_co2,\r\n            backgroundColor: COLORS.slice(0, this.props.ecms.length),\r\n            hoverOffset: 4\r\n            }]\r\n        };\r\n    \r\n        var options_ecm = {\r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'ECM CO2 Savings',\r\n                    font: { size: 16}\r\n                },\r\n                legend: {\r\n                position: 'right'\r\n                }\r\n            },\r\n            maintainAspectRatio: false\r\n        };\r\n    \r\n        // LL97 charts (bottom row)\r\n        var data_ll97_costs ={\r\n            labels: ['2024','2030','2035+'],\r\n            datasets: [\r\n            {\r\n                stack: \"stack1\",\r\n                label: 'Energy Cost',\r\n                data: [net_cost, net_cost, net_cost],\r\n                backgroundColor: [\r\n                'rgb(54, 162, 235)',\r\n                ],\r\n            },\r\n            {\r\n                stack: \"stack1\",\r\n                label: 'LL97 Penalty',\r\n                data: [penalty24, penalty30, penalty35],\r\n                backgroundColor: [\r\n                'rgb(237,28,36)',\r\n                ],   \r\n            },\r\n            {\r\n                stack: \"stack1\",\r\n                label: 'ECM Savings',\r\n                data: [ecm_savings, ecm_savings, ecm_savings],\r\n                backgroundColor: [\r\n                'rgba(0, 145, 77, 0.4)',\r\n                ],   \r\n            }\r\n            ]\r\n        };\r\n    \r\n        var options_ll97_costs = {\r\n            indexAxis: 'y',\r\n            plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'Energy and LL97 Costs',\r\n                padding: {bottom: 0},\r\n                font: { size: 16}\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                label: this.costLabelFunction\r\n                }\r\n            },\r\n            },\r\n            scales: {\r\n            xAxes: [{\r\n                stacked: true,\r\n            }],\r\n            yAxes: [{\r\n                stacked: true,\r\n            }],\r\n            },\r\n            maintainAspectRatio: false\r\n        }\r\n    \r\n        var data_ll97_targets ={\r\n        labels: [''],\r\n        datasets: [\r\n            {\r\n            stack: \"stack1\",\r\n            label: 'Net CO2 Emissions',\r\n            data: [net_co2],\r\n            backgroundColor: [\r\n                'rgb(54, 162, 235)',\r\n            ],\r\n            },\r\n            {\r\n            stack: \"stack1\",\r\n            label: 'ECM Savings',\r\n            data: [ecm_co2],\r\n            backgroundColor: [\r\n                'rgba(0, 145, 77, 0.4)',\r\n            ],   \r\n            }\r\n        ]\r\n        };\r\n    \r\n        var targets = [target24, target30, target35];\r\n        var years = ['2024', '2030', '2035+'];\r\n        var annotations = [];\r\n        targets.forEach( (target, i) => {\r\n        if (target > 0){\r\n            annotations.push({\r\n            label: {\r\n                backgroundColor: ((target <= net_co2) ? 'rgb(237,28,36)' : 'rgba(255, 99, 132, 0.5)'),\r\n                content: [years[i] + ' Target', target.toFixed(0) + ' tCO2e/yr'],\r\n                enabled: true,\r\n                yAdjust: -60,\r\n            },\r\n            type: 'line',\r\n            xMin: target,\r\n            xMax: target,\r\n            borderColor:  ((target <= net_co2) ? 'rgb(237,28,36)' : 'rgba(255, 99, 132, 0.5)'),\r\n            borderWidth: 2,\r\n            })\r\n        }\r\n        });\r\n    \r\n        var options_ll97_targets = {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'LL97 CO2 Emissions Targets (tCO2e)',\r\n                padding: { bottom: 50},\r\n                font: { size: 16}\r\n            },\r\n            legend: {\r\n            display: false\r\n            },\r\n            annotation: {\r\n            annotations: annotations,\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n            grid: {\r\n                drawBorder: false,\r\n                },\r\n                },\r\n            y: {\r\n            grid: {\r\n                display: false, \r\n                drawBorder: false,\r\n                },\r\n            },\r\n        },\r\n        maintainAspectRatio: false\r\n        }\r\n        \r\n        var props = {\r\n            total_kbtu: total_kbtu,\r\n            total_co2: total_co2,\r\n            total_cost: total_cost,\r\n            net_kbtu: net_kbtu,\r\n            net_co2: net_co2,\r\n            net_cost: net_cost,\r\n            data_energy_use: data_energy_use,\r\n            options_energy_use: options_energy_use,\r\n            data_co2: data_co2,\r\n            options_co2: options_co2,\r\n            data_cost: data_cost,\r\n            options_cost: options_cost,\r\n            data_ecm: data_ecm,\r\n            options_ecm: options_ecm,\r\n            data_ll97_costs: data_ll97_costs,\r\n            options_ll97_costs: options_ll97_costs,\r\n            data_ll97_targets: data_ll97_targets,\r\n            options_ll97_targets: options_ll97_targets\r\n        };\r\n        return props;\r\n    }\r\n\r\n  render() {\r\n        var props = this.getProps();\r\n        return (\r\n            <div className=\"content-layout\">\r\n                <div className=\"top-row\">\r\n                <div className=\"btn-group\">\r\n                <button className = {this.props.btnTotal} onClick={this.props.setTotal}>Total (without ECMs)</button>\r\n                <button className = {this.props.btnNet} onClick={this.props.setNet}>Net (with ECMs)</button>\r\n                </div>\r\n                {/* pie total energy use */}\r\n                <div className=\"chart-container\">\r\n                    <Pie id=\"energy-use\" data={props.data_energy_use} options={props.options_energy_use} ref={(reference) => this.pie_energy_use = reference}  />\r\n                    <div className='total-label'> {Intl.NumberFormat('en-US', { maximumFractionDigits: 0 }).format(this.props.totalFlag ? props.total_kbtu : props.net_kbtu)} kBtu </div>\r\n                </div>\r\n\r\n                {/* pie total CO2 */}\r\n                <div className=\"chart-container\">\r\n                    <Pie id=\"energy-co2\" data={props.data_co2} options={props.options_co2} ref={(reference) => this.pie_co2 = reference}  />\r\n                    <div className='total-label'> {Intl.NumberFormat('en-US', { maximumFractionDigits: 0 }).format(this.props.totalFlag ? props.total_co2 : props.net_co2)} tCO2e </div>\r\n                </div>\r\n\r\n                {/* pie total energy costs */}\r\n                <div className=\"chart-container\">\r\n                    <Pie id=\"energy-cost\" data={props.data_cost} options={props.options_cost} ref={(reference) => this.pie_cost = reference}  />\r\n                    <div className='total-label'> {Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(this.props.totalFlag ? props.total_cost : props.net_cost)} </div>\r\n                </div>\r\n                \r\n                {/* pie ECM CO2 breakdown */}\r\n                <div className=\"chart-container ecm\">\r\n                    <Pie id=\"ecm-co2\" data={props.data_ecm} options={props.options_ecm} ref={(reference) => this.pie_ecm = reference}  />\r\n                </div>\r\n                \r\n                </div>\r\n                <div className=\"bottom-row\">\r\n                {/* LL97 costs */}\r\n                <div className=\"chart-container bar\">\r\n                    <Bar id=\"ll97-cost\" data={props.data_ll97_costs} options={props.options_ll97_costs} ref={(reference) => this.bar_ll97 = reference}  />\r\n                    <div className='axis-label'> Total Cost ($) </div>\r\n                </div>\r\n                <div className=\"chart-container bar-thresholds\">\r\n                    <Bar id=\"thresholds\" data={props.data_ll97_targets} options={props.options_ll97_targets} ref={(reference) => this.bar_thresholds = reference} />\r\n                </div>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        );\r\n  }\r\n}\r\n\r\nexport default ChartContent;\r\n","// Generates and displays the entire user interface \r\n// using the React components from the other Javascript files\r\n// and contains the default user input values in the initial state\r\n\r\nimport React, { Component } from 'react';\r\nimport BuildingInputField from './building_field';\r\nimport InputField from './input_field';\r\nimport ECMField from './ecm_field';\r\nimport LimitsField from './limits';\r\nimport ChartContent from './charts';\r\nimport {defaults_2020, carbon_limits} from '../defaults'\r\n\r\nclass UI extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Set initial state\r\n    this.state = {\r\n        // building inputs\r\n        building: 'B_norm',\r\n        area: 180000, // square feet\r\n\r\n        // utility inputs\r\n        electricityUse: 3357600, // kWh (blended rate accounts for both energy and demand)\r\n        gasUse: 224449, // therms\r\n        electricityRate: 0.19, // $/kWh\r\n        gasRate: 0.9, // $/therm\r\n\r\n        // LL97 inputs\r\n        // carbon coefficients\r\n        electricityCoeff: 0.000288962, // tons CO2e/kWh\r\n        gasCoeff: 0.00005311, // tons CO2e/kBtu\r\n        \r\n        // carbon limits (kg CO2e/sf/year)\r\n        limits: {\r\n          limit24: 8.46,\r\n          limit30: 4.53,\r\n          limit35: 1.4,\r\n        },\r\n        penalty: 268, // $/tCO2e\r\n\r\n        ecms: [{\r\n          name: '',\r\n          electricity: 0,\r\n          gas: 0\r\n        }],\r\n\r\n        totalFlag: true,\r\n        btnTotal: 'btn-clicked',\r\n        btnNet: 'btn-unclicked'\r\n    };\r\n\r\n    // Binding this keyword\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onTextChange = this.onTextChange.bind(this);\r\n      this.onLimitsChange = this.onLimitsChange.bind(this);\r\n      this.onECMChange = this.onECMChange.bind(this);\r\n      this.setDefaults = this.setDefaults.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.setTotal = this.setTotal.bind(this);\r\n      this.setNet = this.setNet.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: Number(e.target.value) });\r\n  }\r\n\r\n  onLimitsChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.setState({ limits: carbon_limits[e.target.value] });\r\n  }\r\n  onECMChange(ecms) {\r\n    this.setState({ ecms: ecms });\r\n  }\r\n\r\n  onTextChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  setDefaults() {\r\n    this.setState(defaults_2020);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  setTotal() {\r\n    this.setState({ totalFlag: true });\r\n    this.setState({ btnTotal: 'btn-clicked' });\r\n    this.setState({ btnNet: 'btn-unclicked' });\r\n  }\r\n  \r\n  setNet() {\r\n    this.setState({ totalFlag: false });\r\n    this.setState({ btnTotal: 'btn-unclicked' });\r\n    this.setState({ btnNet: 'btn-clicked' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar-main-container\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"head-text-2\">Building Inputs</div>\r\n              <BuildingInputField building={this.state.building} name=\"area\" value={this.state.area} onTextChange={this.onLimitsChange} onChange={this.onChange} />\r\n              \r\n              <div className=\"head-text-2\">Utility Inputs</div>\r\n              <InputField leftText=\"Electricity (kWh)\" leftVar=\"electricityUse\" leftValue={this.state.electricityUse} rightText=\"$/kWh (Blended)\" rightVar=\"electricityRate\" rightValue={this.state.electricityRate} onChange={this.onChange}/>\r\n              <InputField leftText=\"Natural Gas (therms)\" leftVar=\"gasUse\" leftValue={this.state.gasUse} rightText=\"$/therm\" rightVar=\"gasRate\" rightValue={this.state.gasRate} onChange={this.onChange}/>\r\n              \r\n              <div className=\"head-text-2\">Carbon Coefficients</div>\r\n              <InputField leftText=\"Electricity (tCO2e/kWh)\" leftVar=\"electricityCoeff\" leftValue={this.state.electricityCoeff} rightText=\"Gas (tCO2e/kBtu)\" rightVar=\"gasCoeff\" rightValue={this.state.gasCoeff} onChange={this.onChange}/>\r\n              <div className=\"head-text-2\">LL97 Carbon Limits</div>\r\n              <LimitsField limit24={this.state.limits.limit24} limit30={this.state.limits.limit30} limit35={this.state.limits.limit35} />\r\n              \r\n              <div className=\"head-text-2\">ECM Savings</div>\r\n              <ECMField ecms={this.state.ecms} addECM={this.addECM} onChange={this.onECMChange}/>\r\n              <button onClick={this.setDefaults}>Restore 2020 41CS Defaults</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <ChartContent \r\n            area={this.state.area}\r\n            electricityUse={this.state.electricityUse}\r\n            gasUse={this.state.gasUse}\r\n            electricityCoeff={this.state.electricityCoeff}\r\n            gasCoeff={this.state.gasCoeff}\r\n            electricityRate={this.state.electricityRate}\r\n            gasRate={this.state.gasRate}\r\n            ecms={this.state.ecms}\r\n            limits={this.state.limits}\r\n            penalty={this.state.penalty}\r\n            totalFlag={this.state.totalFlag}\r\n            btnTotal={this.state.btnTotal}\r\n            btnNet={this.state.btnNet}\r\n            setTotal={this.setTotal}\r\n            setNet={this.setNet}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UI;","export default __webpack_public_path__ + \"static/media/cooper_logo.bc42489a.svg\";","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport UI from \"./Components/UI\"\nimport logo from \"./cooper_logo.svg\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <div className=\"header\">Cooper Union Energy Simulator</div> */}\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <img src={logo} alt=\"Cooper Logo\" />\n        </div>\n        <div className=\"header-middle\">\n          <div className=\"title-text\">Cooper Union Carbon Emissions Calculator</div>\n          <div className=\"title-after\"></div>\n        </div>\n        <div className=\"header-right\"></div>\n      </div>\n      \n      <UI />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}